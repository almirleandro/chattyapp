{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messageRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","disabled","props","messageClass","src","alt","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAUAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,gBACnBC,MAAO,+CAGT,IAAMC,EAAOR,IAASQ,OAChBC,EAAYT,IAASS,YAoB3B,SAASC,IAMP,OACE,qCACE,wBAAQC,UAAU,UAAUC,QAPP,WACvB,IAAMC,EAAW,IAAIb,IAASQ,KAAKM,mBACnCN,EAAKO,gBAAgBF,IAKnB,8CACA,mBAAGF,UAAU,YAAb,+JAKN,SAASK,IACP,OAAOR,EAAKS,aAEV,wBAAQN,UAAU,WAAWC,QAAS,kBAAMJ,EAAKU,WAAjD,2BAIJ,SAASC,IAEP,IAAMC,EAAQC,mBAERC,EAAab,EAAUc,WAAW,YAClCC,EAAQF,EAAWG,QAAQ,aAAaC,MAAM,IALlC,EAOCC,YAAkBH,EAAO,CAACI,QAAS,OAA/CC,EAPW,sBASgBC,mBAAS,IATzB,mBASXC,EATW,KASAC,EATA,KAWZC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAElBD,EAAEE,iBAFgB,EAIQ5B,EAAKS,YAAvBoB,EAJU,EAIVA,IAAKC,EAJK,EAILA,SAJK,SAMZhB,EAAWiB,IAAI,CACnBC,KAAMT,EACNU,UAAWzC,IAASS,UAAUiC,WAAWC,kBACzCN,MACAC,aAVgB,OAalBN,EAAa,IAEbZ,EAAMwB,QAAQC,eAAe,CAAEC,SAAU,WAfvB,2CAAH,sDAkBjB,OACE,qCACE,iCACGjB,GAAYA,EAASkB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAEvD,sBAAMC,IAAKhC,OAIb,uBAAMiC,SAAUpB,EAAhB,UACE,uBAAOqB,MAAOvB,EAAWwB,SAAU,SAAArB,GAAC,OAAIF,EAAaE,EAAEsB,OAAOF,QAAQG,YAAY,gBAClF,wBAAQC,KAAK,SAASC,UAAW5B,EAAjC,0BAMR,SAASkB,EAAYW,GAAQ,IAAD,EACMA,EAAMV,QAA9BV,EADkB,EAClBA,KAAMH,EADY,EACZA,IAAKC,EADO,EACPA,SAEbuB,EAAexB,IAAQ7B,EAAKS,YAAYoB,IAAM,OAAS,WAE7D,OACE,sBAAK1B,UAAS,kBAAakD,GAA3B,UACE,qBAAKC,IAAKxB,EAAUyB,IAAI,YACxB,4BAAIvB,OAKKwB,MAlGf,WAAgB,IAAD,EAEEC,YAAazD,GAArB0D,EAFM,oBAIb,OACE,sBAAKvD,UAAU,MAAf,UACE,mCACE,4CACA,cAACK,EAAD,OAGF,kCACGkD,EAAO,cAAC/C,EAAD,IAAe,cAACT,EAAD,UCtBhByD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e56f2c0f.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react'\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBL0gkyL_9HkkZrTc_fLho3SnRiQc2exHA\",\n  authDomain: \"chatty-4a216.firebaseapp.com\",\n  projectId: \"chatty-4a216\",\n  storageBucket: \"chatty-4a216.appspot.com\",\n  messagingSenderId: \"1073791880150\",\n  appId: \"1:1073791880150:web:453d58b705a2fa2c927277\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  \n  const [user] = useAuthState(auth);\n  \n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Chatty App</h1>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Fazer login com uma conta Google</button>\n      <p className='firstInfo'>Suas mensagens e imagem de perfil ficarão visíveis publicamente ao enviar uma mensagem. Evite ser rude e respeite os outros usuários.</p>\n    </>\n  )\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sair da conta</button>\n  )\n}\n\nfunction ChatRoom() {\n\n  const dummy = useRef();\n\n  const messageRef = firestore.collection('messages');\n  const query = messageRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, {idField: 'id'});\n\n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async(e) => {\n    \n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messageRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    });\n\n    setFormValue('');\n\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (\n    <>\n      <main>\n        {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n      \n        <span ref={dummy}></span>\n      \n      </main>\n\n      <form onSubmit={sendMessage}>\n        <input value={formValue} onChange={e => setFormValue(e.target.value)} placeholder='Digite aqui' />\n        <button type='submit' disabled={!formValue}>Enviar</button>\n      </form>\n    </>\n  )\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL} alt='profile'/>\n      <p>{text}</p>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}